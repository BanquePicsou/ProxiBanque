<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd">



 <!-- Definition of PostgreSQL datasource -->
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="org.postgresql.Driver" />
		<property name="url" value="jdbc:postgresql://localhost/fenix-test" />
		<property name="username" value="fenix-test" />
		<property name="password" value="Qwaszx" />
	</bean>
	<bean id="persistenceUnitManager" class="org.springframework.orm.jpa.persistenceunit.DefaultPersistenceUnitManager">
		<property name="persistenceXmlLocations">
   <!--see also http://forum.springframework.org/showthread.php?t=52232  -->
			<list>
				<value>classpath:META-INF/fenix-core-persistence.xml</value>
			</list>
		</property>

  <!-- if no datasource is specified, use this one -->
		<property name="defaultDataSource" ref="dataSource" />
	</bean>
	<bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"
		depends-on="viewDropper">

  <!-- JPA EntityManagerFactory for PostegreSQL -->
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
				<property name="database" value="POSTGRESQL" />
				<property name="databasePlatform" value="org.hibernate.dialect.PostgreSQLDialect" />
				<property name="showSql" value="false" />
				<property name="generateDdl" value="true" />
			</bean>
		</property>
		<property name="jpaProperties">
			<props>
				<prop key="hibernate.hbm2dll.auto">create-drop</prop>
			</props>
		</property>
		<property name="persistenceUnitManager" ref="persistenceUnitManager" />
	</bean>

 <!-- Transaction manager for a single JPA EntityManagerFactory (alternative to JTA) -->
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>
	<!--
		Instruct Spring to retrieve and apply @AspectJ aspects which are defined as beans in this context (such as the
		UsageLogAspect below).
	-->
	<aop:aspectj-autoproxy />


 <!--
  Instruct Spring to perform declarative transaction management automatically
  on annotated classes.
 -->
	<tx:annotation-driven />
	<!--
		PostProcessors to perform resource injection according to the JPA specification (@PersistenceContext,
		@PersistenceUnit).
	-->
	<bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor" />
	<!--
		PostProcessors to perform exception translation on @Repository classes (from native exceptions such as JPA
		PersistenceExceptions to Spring's DataAccessException hierarchy).
	-->
	<bean class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />
	<!--
		This bean will remove all the existing views done on Datasets' content and on ProjectedData. It has to be run *before*
		the JPA initialization, or some tables cannot be properly updated/removed. See also the dependency set in JPA EMF
	-->
	<bean id="viewDropper" class="org.fao.fenix.persistence.util.ViewDropper">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<bean id="dbTableInfo" class="org.fao.fenix.persistence.util.DBTableInfo">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<bean id="dbTableContent" class="org.fao.fenix.persistence.util.DBTableContent">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<!--
		Will automatically be transactional due to @Transactional. EntityManager will be auto-injected due to
		@PersistenceContext. PersistenceExceptions will be auto-translated due to @Repository.
	-->
	<bean id="chartDao" class="org.fao.fenix.persistence.perspective.ChartDao">
		<property name="fenixDomainUserDao" ref="fenixDomainUserDao" />
	</bean>
	<bean id="reportDao" class="org.fao.fenix.persistence.perspective.ReportDao">
		<property name="fenixDomainUserDao" ref="fenixDomainUserDao" />
	</bean>
	<bean id="datasetDao" class="org.fao.fenix.persistence.info.dataset.DatasetDao">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>
	<bean id="patternDao" class="org.fao.fenix.persistence.info.pattern.PatternDao">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
		<property name="fenixDomainUserDao" ref="fenixDomainUserDao" />
	</bean>
	<bean id="fenixDomainUserDao" class="org.fao.fenix.persistence.perspective.FenixDomainUserDao"></bean>
	<bean id="dataviewDao" class="org.fao.fenix.persistence.perspective.DataViewDao"></bean>
	<bean id="projectDao" class="org.fao.fenix.persistence.perspective.ProjectDao">
		<property name="fenixDomainUserDao" ref="fenixDomainUserDao" />
	</bean>
	<bean id="tableDao" class="org.fao.fenix.persistence.perspective.TableDao">
		<property name="fenixDomainUserDao" ref="fenixDomainUserDao" />
	</bean>

	<bean id="mapDao" class="org.fao.fenix.persistence.perspective.MapDao">
		<property name="fenixDomainUserDao" ref="fenixDomainUserDao" />
	</bean>
	<bean id="projectedDataDao" class="org.fao.fenix.persistence.map.ProjectedDataDao">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>
	<bean id="dbFeatureLayerDao" class="org.fao.fenix.persistence.map.layer.DBFeatureLayerDao"></bean>
	<bean id="geoServerDao" class="org.fao.fenix.persistence.map.geoserver.GeoServerDao">
		<property name="dbTableInfo" ref="dbTableInfo" />
		<property name="dbTableContent" ref="dbTableContent" />
	</bean>
	<bean id="geoViewDao" class="org.fao.fenix.persistence.map.GeoViewDao" />
 <!-- <bean id="layerDao" class="org.fao.fenix.persistence.layer.LayerDao"></bean> -->
	<bean id="internalWMSLayerDao" class="org.fao.fenix.persistence.map.layer.InternalWMSLayerDao"></bean>
	<bean id="wmsMapProviderDao" class="org.fao.fenix.persistence.map.WMSMapProviderDao">
		<property name="fenixDomainUserDao" ref="fenixDomainUserDao" />
	</bean>

	<bean id="filterResultDao" class="org.fao.fenix.persistence.filter.FilterResultDao"></bean>
	<bean id="twoDatasetJoinDao" class="org.fao.fenix.persistence.analysemodel.TwoDatasetJoinDao"></bean>
	<bean id="searchDao" class="org.fao.fenix.persistence.search.SearchDao"></bean>
	<bean id="authenticationDao" class="org.fao.fenix.persistence.security.AclDao"></bean>
	<bean id="authorisationDao" class="org.fao.fenix.persistence.security.PermissionDao"></bean>
	<bean id="fenixSecuredUserDao" class="org.fao.fenix.persistence.security.FenixSecuredUserDao"></bean>
	<bean id="fenixDoubleUserDao" class="org.fao.fenix.persistence.security.FenixDoubleUserDao"></bean>
	<bean id="textDao" class="org.fao.fenix.persistence.perspective.TextDao">
		<property name="fenixDomainUserDao" ref="fenixDomainUserDao" />
	</bean>
	<bean id="metadataDao" class="org.fao.fenix.persistence.MetadataDao"></bean>
	<bean id="filterDao" class="org.fao.fenix.persistence.filter.FilterDao"></bean>
	<bean id="communicationDao" class="org.fao.fenix.persistence.communication.CommunicationDao"></bean>
	<bean id="fenixGaulDao" class="org.fao.fenix.persistence.gaul.FenixGaulDao"></bean>
	<bean id="hsDao" class="org.fao.fenix.persistence.commodity.HSDao"></bean>
	<bean id="measurementUnitDao" class="org.fao.fenix.persistence.measurementunit.MeasurementUnitDao"></bean>
	<bean id="measurementUnitLabelDao" class="org.fao.fenix.persistence.measurementunit.MeasurementUnitLabelDao"></bean>
	<bean id="measurementUnitSystemDao" class="org.fao.fenix.persistence.measurementunit.MeasurementUnitSystemDao"></bean>
	<bean id="measurementUnitOperationDao" class="org.fao.fenix.persistence.measurementunit.MeasurementUnitOperationDao"></bean>
	<bean id="measurementUnitConversionRateDao" class="org.fao.fenix.persistence.measurementunit.MeasurementUnitConversionRateDao"></bean>
	<bean id="indexCalculator" class="org.fao.fenix.persistence.index.IndexCalculator">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>
	<bean id="cerealsIndexCalculatorDog" class="org.fao.fenix.persistence.index.CerealsIndexCalculatorDog">
		<property name="datasetDao" ref="datasetDao" />
	</bean>
	<bean id="indexParametersCalculator" class="org.fao.fenix.persistence.index.IndexParametersCalculator">
		<property name="indexCalculator" ref="indexCalculator" />
	</bean>
	<bean id="pog" class="org.fao.fenix.persistence.testdata.Pog">
		<property name="tableDao" ref="tableDao" />
		<property name="chartDao" ref="chartDao" />
		<property name="mapDao" ref="mapDao" />
		<property name="projectDao" ref="projectDao" />
		<property name="fenixDoubleUserDao" ref="fenixDoubleUserDao" />
		<property name="projectedDataDao" ref="projectedDataDao" />
		<property name="datasetDao" ref="datasetDao" />
		<property name="textDao" ref="textDao" />
		<property name="communicationDao" ref="communicationDao" />
		<property name="fenixGaulDao" ref="fenixGaulDao" />
		<property name="hsDao" ref="hsDao" />
		<property name="measurementUnitSI" ref="measurementUnitSI" />
		<property name="patternDao" ref="patternDao" />
	</bean>
	<bean id="measurementUnitSI" class="org.fao.fenix.persistence.measurementunit.MeasurementUnitSI">
		<property name="measurementUnitDao" ref="measurementUnitDao" />
		<property name="measurementUnitLabelDao" ref="measurementUnitLabelDao" />
		<property name="measurementUnitSystemDao" ref="measurementUnitSystemDao" />
		<property name="measurementUnitOperationDao" ref="measurementUnitOperationDao" />
		<property name="measurementUnitConversionRateDao" ref="measurementUnitConversionRateDao" />
	</bean>
</beans>